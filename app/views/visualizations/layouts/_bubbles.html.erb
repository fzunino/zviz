  <head>
    <style type="text/css">
    body {
      font: 300 36px "Helvetica Neue";
      height: 640px;
      margin: 80px 160px 80px 160px;
      overflow: hidden;
      position: relative;
      width: 960px;
    }

    a:link, a:visited {
      color: #777;
      text-decoration: none;
    }

    a:hover {
      color: #666;
    }

    blockquote {
      margin: 0;
    }

    blockquote:before {
      content: "“";
      position: absolute;
      left: -.4em;
    }

    blockquote:after {
      content: "”";
      position: absolute;
    }

    body > ul {
      margin: 0;
      padding: 0;
    }

    h1 {
      font-size: 64px;
    }

    h1, h2, h3 {
      font-weight: inherit;
      margin: 0;
    }

    h2, h3 {
      text-align: right;
      font-size: inherit;
      position: absolute;
      bottom: 0;
      right: 0;
    }

    h2 {
      font-size: 24px;
      position: absolute;
    }

    h3 {
      bottom: -20px;
      font-size: 18px;
    }

    .invert {
      background: #1f1f1f;
      color: #dcdccc;
    }

    .invert h2, .invert h3 {
      color: #7f9f7f;
    }

    .string, .regexp {
      color: #f39;
    }

    .keyword {
      color: #00c;
    }

    .comment {
      color: #777;
      font-style: oblique;
    }

    .number {
      color: #369;
    }

    .class, .special {
      color: #1181B8;
    }

    body > svg {
      position: absolute;
      top: -80px;
      left: -160px;
    }



      text {
        font-size: 11px;
        pointer-events: none;
      }

      text.parent {
        fill: #1f77b4;
      }

      circle {
        fill: #ccc;
        stroke: #999;
        pointer-events: all;
      }

      circle.parent {
        fill: #1f77b4;
        fill-opacity: .1;
        stroke: steelblue;
      }

      circle.parent:hover {
        stroke: #ff7f0e;
        stroke-width: .5px;
      }

      circle.child {
        pointer-events: none;
      }
    </style>
  </head>

  <body>
    <!--<script type="text/javascript" src="d3/d3.js"></script>-->
    <!--<script type="text/javascript" src="d3/d3.layout.js"></script>-->
    <script type="text/javascript">
    var w = 1280,
        h = 800,
        r = 720,
        x = d3.scale.linear().range([0, r]),
        y = d3.scale.linear().range([0, r]),
        node,
        root;

    var pack = d3.layout.pack()
        .size([r, r])
        .value(function(d) { return d.size; })

    var vis = d3.select("body").insert("svg:svg", "h2")
        .attr("width", w)
        .attr("height", h)
      .append("svg:g")
        .attr("transform", "translate(" + (w - r) / 2 + "," + (h - r) / 2 + ")");

    d3.json("<%= @visualization.dataset.data.url %>", function(data) {
      node = root = data;

      var nodes = pack.nodes(root);

      vis.selectAll("circle")
          .data(nodes)
        .enter().append("svg:circle")
          .attr("class", function(d) { return d.children ? "parent" : "child"; })
          .attr("cx", function(d) { return d.x; })
          .attr("cy", function(d) { return d.y; })
          .attr("r", function(d) { return d.r; })
          .on("click", function(d) { return zoom(node == d ? root : d); });

      vis.selectAll("text")
          .data(nodes)
        .enter().append("svg:text")
          .attr("class", function(d) { return d.children ? "parent" : "child"; })
          .attr("x", function(d) { return d.x; })
          .attr("y", function(d) { return d.y; })
          .attr("dy", ".35em")
          .attr("text-anchor", "middle")
          .style("opacity", function(d) { return d.r > 20 ? 1 : 0; })
          .text(function(d) { return d.name; });

      d3.select(window).on("click", function() { zoom(root); });
    });

    function zoom(d, i) {
      var k = r / d.r / 2;
      x.domain([d.x - d.r, d.x + d.r]);
      y.domain([d.y - d.r, d.y + d.r]);

      var t = vis.transition()
          .duration(d3.event.altKey ? 7500 : 750);

      t.selectAll("circle")
          .attr("cx", function(d) { return x(d.x); })
          .attr("cy", function(d) { return y(d.y); })
          .attr("r", function(d) { return k * d.r; });

      t.selectAll("text")
          .attr("x", function(d) { return x(d.x); })
          .attr("y", function(d) { return y(d.y); })
          .style("opacity", function(d) { return k * d.r > 20 ? 1 : 0; });

      node = d;
      d3.event.stopPropagation();
    }
  </script>
</body>